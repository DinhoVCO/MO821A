
version: '3'
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    privileged: true
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /var/run/docker.sock:/var/run/docker.sock  

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./config/grafana.ini:/etc/grafana/grafana.ini
      - ./config/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./config/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
      - cadvisor
    command:
      - --config=/etc/grafana/grafana.ini


  server:
    container_name: server
    build:
      context: .
      dockerfile: Dockerfile
    command: python server.py --number_of_rounds=20
    environment:
      FLASK_RUN_PORT: 6000
      DOCKER_HOST_IP: host.docker.internal
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock      
    ports:
      - "6000:6000"
      - "8265:8265"
      - "8000:8000"
    depends_on:
      - prometheus
      - grafana

  client1:
    container_name: client1
    build:
      context: .
      dockerfile: Dockerfile 
    command: python client.py --server_address=server:8080 --data_percentage=1  --client_id=1 --total_clients=10 --batch_size=32 --learning_rate=0.01
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "6g"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "6001:6001"
    depends_on:
      - server
    environment:
      FLASK_RUN_PORT: 6001
      container_name: client1
      DOCKER_HOST_IP: host.docker.internal

  client2:
    container_name: client2
    build:
      context: .
      dockerfile: Dockerfile 
    command: python client.py --server_address=server:8080 --data_percentage=1  --client_id=2 --total_clients=10 --batch_size=32 --learning_rate=0.01
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "6g"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "6002:6002"
    depends_on:
      - server
    environment:
      FLASK_RUN_PORT: 6002
      container_name: client2
      DOCKER_HOST_IP: host.docker.internal

  client3:
    container_name: client3
    build:
      context: .
      dockerfile: Dockerfile 
    command: python client.py --server_address=server:8080 --data_percentage=1  --client_id=3 --total_clients=10 --batch_size=32 --learning_rate=0.01
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "6g"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "6003:6003"
    depends_on:
      - server
    environment:
      FLASK_RUN_PORT: 6003
      container_name: client3
      DOCKER_HOST_IP: host.docker.internal

  client4:
    container_name: client4
    build:
      context: .
      dockerfile: Dockerfile 
    command: python client.py --server_address=server:8080 --data_percentage=1  --client_id=4 --total_clients=10 --batch_size=32 --learning_rate=0.01
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "6g"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "6004:6004"
    depends_on:
      - server
    environment:
      FLASK_RUN_PORT: 6004
      container_name: client4
      DOCKER_HOST_IP: host.docker.internal

  client5:
    container_name: client5
    build:
      context: .
      dockerfile: Dockerfile 
    command: python client.py --server_address=server:8080 --data_percentage=1  --client_id=5 --total_clients=10 --batch_size=32 --learning_rate=0.01
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "6g"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "6005:6005"
    depends_on:
      - server
    environment:
      FLASK_RUN_PORT: 6005
      container_name: client5
      DOCKER_HOST_IP: host.docker.internal

  client6:
    container_name: client6
    build:
      context: .
      dockerfile: Dockerfile 
    command: python client.py --server_address=server:8080 --data_percentage=1  --client_id=6 --total_clients=10 --batch_size=32 --learning_rate=0.01
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "6g"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "6006:6006"
    depends_on:
      - server
    environment:
      FLASK_RUN_PORT: 6006
      container_name: client6
      DOCKER_HOST_IP: host.docker.internal

  client7:
    container_name: client7
    build:
      context: .
      dockerfile: Dockerfile 
    command: python client.py --server_address=server:8080 --data_percentage=1  --client_id=7 --total_clients=10 --batch_size=32 --learning_rate=0.01
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "6g"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "6007:6007"
    depends_on:
      - server
    environment:
      FLASK_RUN_PORT: 6007
      container_name: client7
      DOCKER_HOST_IP: host.docker.internal

  client8:
    container_name: client8
    build:
      context: .
      dockerfile: Dockerfile 
    command: python client.py --server_address=server:8080 --data_percentage=1  --client_id=8 --total_clients=10 --batch_size=32 --learning_rate=0.01
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "6g"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "6008:6008"
    depends_on:
      - server
    environment:
      FLASK_RUN_PORT: 6008
      container_name: client8
      DOCKER_HOST_IP: host.docker.internal

  client9:
    container_name: client9
    build:
      context: .
      dockerfile: Dockerfile 
    command: python client.py --server_address=server:8080 --data_percentage=1  --client_id=9 --total_clients=10 --batch_size=32 --learning_rate=0.01
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "6g"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "6009:6009"
    depends_on:
      - server
    environment:
      FLASK_RUN_PORT: 6009
      container_name: client9
      DOCKER_HOST_IP: host.docker.internal

  client10:
    container_name: client10
    build:
      context: .
      dockerfile: Dockerfile 
    command: python client.py --server_address=server:8080 --data_percentage=1  --client_id=10 --total_clients=10 --batch_size=32 --learning_rate=0.01
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "6g"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "6010:6010"
    depends_on:
      - server
    environment:
      FLASK_RUN_PORT: 6010
      container_name: client10
      DOCKER_HOST_IP: host.docker.internal
volumes:
  grafana-storage:
